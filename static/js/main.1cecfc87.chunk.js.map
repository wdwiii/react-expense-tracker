{"version":3,"sources":["components/UI/Card.js","components/Expenses/ExpensesFilter.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/Expenses.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","App.js","index.js"],"names":["Card","props","classes","className","children","ExpensesFilter","value","selected","onChange","event","selectValue","target","onChangeFilter","ExpenseDate","month","date","toLocaleString","day","year","getFullYear","ExpenseItem","title","amount","ExpensesList","items","length","map","expense","id","ChartBar","barFillHeight","maxValue","Math","round","style","height","label","Chart","dataPointValues","dataPoints","dataPoint","totalMax","max","ExpensesChart","chartDataPoints","expenses","getMonth","Expenses","useState","filteredYear","setFilteredYear","filteredExpenses","filter","toString","filterValue","ExpenseForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","preventDefault","expenseData","Date","onSaveExpenseData","type","min","step","onClick","endEditingMode","NewExpense","isEditing","setIsEditing","enteredExpenseData","random","onAddExpense","DUMMY_EXPENSES","App","setExpenses","prevExpenses","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1cecfc87.chunk.js","sourcesContent":["import React from 'react';\nimport './Card.css';\n\n//Card will serve as a wrapper div with extrated styles form Expenses and ExpenseItem. Prevent code duplication\n\nexport const Card = props => {\n  const classes = 'card ' + props.className;\n\n  return <div className={classes}>{props.children}</div>;\n};\n","import React from 'react';\n\nimport './ExpensesFilter.css';\n\nconst ExpensesFilter = props => {\n  const selectChangeHandler = event => {\n    const selectValue = event.target.value;\n    props.onChangeFilter(selectValue);\n  };\n\n  return (\n    <div className=\"expenses-filter\">\n      <div className=\"expenses-filter__control\">\n        <label>Filter by year</label>\n        <select value={props.selected} onChange={selectChangeHandler}>\n          <option value=\"2022\">2022</option>\n          <option value=\"2021\">2021</option>\n          <option value=\"2020\">2020</option>\n          <option value=\"2019\">2019</option>\n        </select>\n      </div>\n    </div>\n  );\n};\n\nexport default ExpensesFilter;\n","import React from 'react';\nimport './ExpenseDate.css';\n\nexport const ExpenseDate = props => {\n  const month = props.date.toLocaleString('en-US', { month: 'long' });\n  const day = props.date.toLocaleString('en-US', { day: '2-digit' });\n  const year = props.date.getFullYear();\n\n  return (\n    <div className=\"expense-date\">\n      <div className=\"expense-date__month\">{month}</div>\n      <div className=\"expense-date__year\">{year}</div>\n      <div className=\"expense-date__day\">{day}</div>\n    </div>\n  );\n};\n","//css can be linked to the js file by importing\n//exports can be executed in two ways: default and named.\n//default can only export one component per file\n//named can export multiple components\nimport React from 'react';\nimport './ExpenseItem.css';\nimport { ExpenseDate } from './ExpenseDate';\nimport { Card } from '../UI/Card';\nimport '../UI/Card.css';\n\nexport const ExpenseItem = props => {\n  //Insted of wrting variables here, write/import the data to App.js\n  // const expenseDate = new Date(2021, 2, 28);\n  // const expenseTitle = \"Adobe Suite\";\n  // const expensePrice = 55.67;\n  return (\n    <li>\n      <Card className=\"expense-item\">\n        <ExpenseDate date={props.date} />\n        <div className=\"expense-item__description\">\n          <h2>{props.title}</h2>\n          <div className=\"expense-item__price\">${props.amount}</div>\n        </div>\n      </Card>\n    </li>\n  );\n};\n","import './ExpensesList.css';\nimport { ExpenseItem } from './ExpenseItem';\n\nexport const ExpensesList = props => {\n  //if filtered expenses length is zero, render h2 element.\n  if (props.items.length === 0) {\n    return <h2 className=\"expenses-list__fallback\">No expenses found</h2>;\n  }\n\n  //else, render expenses list items\n  return (\n    <ul className=\"expenses-list\">\n      {props.items.map(expense => (\n        <ExpenseItem\n          key={expense.id}\n          title={expense.title}\n          amount={expense.amount}\n          date={expense.date}\n        />\n      ))}\n      ;\n    </ul>\n  );\n};\n","import './ChartBar.css';\n\nexport const ChartBar = props => {\n  let barFillHeight = '0%';\n\n  if (props.maxValue > 0) {\n    //If the max value is greater than zero, barFIllHeight is the value divided by the max value, rounded to the nearest integer, and converted to a string\n    barFillHeight = Math.round((props.value / props.maxValue) * 100) + '%';\n  }\n\n  return (\n    <div className=\"chart-bar\">\n      <div className=\"chart-bar__inner\">\n        <div\n          className=\"chart-bar__fill\"\n          style={{ height: barFillHeight }}\n        ></div>\n      </div>\n      <div className=\"chart-bar__label\">{props.label}</div>\n    </div>\n  );\n};\n\n//Notes: JSX style props accepts a JavaScript object for it's value.\n","import './Chart.css';\nimport { ChartBar } from './ChartBar';\n\nexport const Chart = props => {\n  //Return s a new array with only the value for each data point, transforming the data from objects to numbers\n  const dataPointValues = props.dataPoints.map(dataPoint => dataPoint.value);\n  //Max method wants list of items and not an array\n  const totalMax = Math.max(...dataPointValues);\n\n  return (\n    //Make the number of bars inside the Chart dynamic. Map through an array of data to generate a ChartBar for each item in the array.\n    <div className=\"chart\">\n      {props.dataPoints.map(dataPoint => (\n        <ChartBar\n          key={dataPoint.label}\n          value={dataPoint.value}\n          maxValue={totalMax}\n          label={dataPoint.label}\n        />\n      ))}\n    </div>\n  );\n};\n","import { Chart } from '../Chart/Chart';\n\nexport const ExpensesChart = props => {\n  const chartDataPoints = [\n    { label: 'Jan', value: 0 },\n    { label: 'Feb', value: 0 },\n    { label: 'Mar', value: 0 },\n    { label: 'Apr', value: 0 },\n    { label: 'May', value: 0 },\n    { label: 'Jun', value: 0 },\n    { label: 'Jul', value: 0 },\n    { label: 'Aug', value: 0 },\n    { label: 'Sep', value: 0 },\n    { label: 'Oct', value: 0 },\n    { label: 'Nov', value: 0 },\n    { label: 'Dec', value: 0 },\n  ];\n\n  for (const expense of props.expenses) {\n    const expenseMonth = expense.date.getMonth(); //Starting at 0; ex: Jan = 0, Feb = 1\n    chartDataPoints[expenseMonth].value += expense.amount;\n  }\n\n  return <Chart dataPoints={chartDataPoints} />;\n};\n","import React, { useState } from 'react';\nimport './Expenses.css';\nimport { Card } from '../UI/Card';\nimport ExpensesFilter from './ExpensesFilter';\nimport { ExpensesList } from './ExpensesList';\nimport { ExpensesChart } from './ExpensesChart';\n\n//Containes the individual expense items and the container div\nexport const Expenses = props => {\n  const [filteredYear, setFilteredYear] = useState('2020');\n\n  const filterChangeHandler = filterValue => {\n    setFilteredYear(filterValue);\n  };\n\n  const filteredExpenses = props.items.filter(expense => {\n    return expense.date.getFullYear().toString() === filteredYear;\n  });\n\n  return (\n    <Card className=\"expenses\">\n      <ExpensesFilter\n        selected={filteredYear}\n        onChangeFilter={filterChangeHandler}\n      />\n      <ExpensesChart expenses={filteredExpenses} />\n      <ExpensesList items={filteredExpenses} />\n    </Card>\n  );\n};\n","import './ExpenseForm.css';\nimport { useState } from 'react';\n\n//Form component that holds input for Name, Amount, and Date\nexport const ExpenseForm = props => {\n  //use State to store values for input\n  //create functions to watch the values of the input fields\n  //Add onChange prop to input fields to update value when any change is made\n\n  const [enteredTitle, setEnteredTitle] = useState('');\n  const [enteredAmount, setEnteredAmount] = useState('');\n  const [enteredDate, setEnteredDate] = useState('');\n\n  //Alternate Method of using sigle state\n  // const [userInput, setUserInput] = useState({\n  //   enteredTitle: '',\n  //   enteredAmount: '',\n  //   enteredDate: '',\n  // });\n\n  const titleChangeHandler = event => {\n    setEnteredTitle(event.target.value);\n    // setUserInput(prevState => {\n    //   return {\n    //     ...prevState,\n    //     enteredTitle: event.target.value,\n    //   };\n    // });\n  };\n\n  const amountChangeHandler = event => {\n    setEnteredAmount(event.target.value);\n    // setUserInput(prevState => {\n    //   return {\n    //     ...prevState,\n    //     enteredAmount: event.target.value,\n    //   };\n    // });\n  };\n\n  const dateChangeHandler = event => {\n    setEnteredDate(event.target.value);\n    // setUserInput(prevState => {\n    //   return {\n    //     ...prevState,\n    //     enteredDate: event.target.value,\n    //   };\n    // });\n  };\n\n  const submitHandler = event => {\n    event.preventDefault();\n    //object that will hold all of the current state values\n    const expenseData = {\n      title: enteredTitle,\n      amount: +enteredAmount, //'+' is added to convert the input from a string to a number and hence make sure that numbers are added (and not strings concatenated).\n      date: new Date(enteredDate),\n    };\n\n    //two way binding that allows form fields to clear upon submission\n    props.onSaveExpenseData(expenseData);\n    setEnteredTitle('');\n    setEnteredAmount('');\n    setEnteredDate('');\n  };\n\n  return (\n    <form onSubmit={submitHandler}>\n      <div className=\"new-expense__controls\">\n        <div className=\"new-expense__control\">\n          <label>Title</label>\n          <input\n            type=\"text\"\n            value={enteredTitle}\n            onChange={titleChangeHandler}\n          />\n        </div>\n        <div className=\"new-expense__control\">\n          <label>Amount</label>\n          <input\n            type=\"number\"\n            min=\"0.01\"\n            step=\"0.01\"\n            value={enteredAmount}\n            onChange={amountChangeHandler}\n          />\n        </div>\n        <div className=\"new-expense__control\">\n          <label>Date</label>\n          <input\n            type=\"date\"\n            min=\"2019-01-01\"\n            max=\"2022-12-31\"\n            value={enteredDate}\n            onChange={dateChangeHandler}\n          />\n        </div>\n        <div className=\"new-expense__actions\">\n          {/* Sets isEditing state to false and hides form */}\n          <button type=\"button\" onClick={props.endEditingMode}>\n            Cancel\n          </button>\n          <button type=\"submit\">Submit</button>\n        </div>\n      </div>\n    </form>\n  );\n};\n","import React, { useState } from 'react';\n\nimport './NewExpense.css';\nimport { ExpenseForm } from './ExpenseForm';\n\n//Wrapper div that surrounds the form\nexport const NewExpense = props => {\n  const onSaveExpenseDataHandler = enteredExpenseData => {\n    const expenseData = {\n      ...enteredExpenseData,\n      id: Math.random().toString(),\n    };\n    props.onAddExpense(expenseData);\n    setIsEditing(false);\n  };\n\n  const [isEditing, setIsEditing] = useState(false);\n\n  const startEditingHandler = () => {\n    setIsEditing(true);\n  };\n\n  const endEditingHandler = () => {\n    setIsEditing(false);\n  };\n\n  return (\n    <div className=\"new-expense\">\n      {/* If isEditing is FALSE, show button */}\n      {!isEditing && (\n        <button onClick={startEditingHandler}>Add New Expense</button>\n      )}\n      {/* If isEditing is TRUE, show form */}\n      {isEditing && (\n        <ExpenseForm\n          onSaveExpenseData={onSaveExpenseDataHandler}\n          endEditingMode={endEditingHandler}\n        />\n      )}\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport { Expenses } from './components/Expenses/Expenses';\nimport { NewExpense } from './components/NewExpense/NewExpense';\n\nconst DUMMY_EXPENSES = [\n  {\n    id: 'e1',\n    title: 'Toilet Paper',\n    amount: 94.12,\n    date: new Date(2020, 7, 14),\n  },\n  { id: 'e2', title: 'New TV', amount: 799.49, date: new Date(2021, 2, 12) },\n  {\n    id: 'e3',\n    title: 'Car Insurance',\n    amount: 294.67,\n    date: new Date(2021, 2, 6),\n  },\n  {\n    id: 'e4',\n    title: 'New Desk (Wooden)',\n    amount: 450,\n    date: new Date(2021, 5, 12),\n  },\n  {\n    id: 'e5',\n    title: 'PlayStation 5',\n    amount: 499.95,\n    date: new Date(2021, 1, 23),\n  },\n];\n\nfunction App() {\n  const [expenses, setExpenses] = useState(DUMMY_EXPENSES);\n\n  const addExpenseHandler = expense => {\n    setExpenses(prevExpenses => [expense, ...prevExpenses]);\n  };\n\n  return (\n    <div>\n      <NewExpense onAddExpense={addExpenseHandler} />\n      <Expenses items={expenses} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}